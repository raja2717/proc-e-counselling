<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:email="http://www.mulesoft.org/schema/mule/email" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd">

	
	
	
	<sub-flow name="statusCheck-Sub_Flow" doc:id="adc0726d-efc9-4f33-97a0-56d4e266bf70" >
		<ee:transform doc:name="payload before invoking getPerformanceDetails sys-e-counselling" doc:id="531f951d-2ccf-4b2d-bf07-a0dddf8f3eae">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"registerationId": vars.initialPayload.studentDetails.registerationId
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<flow-ref doc:name='getPerformanceDetails-Sub_Flow-Invoke with target "fetchedPerformanceDetails"' doc:id="c8d5a752-a180-4e1a-b9ef-25b98c791c3d" name="getPerformanceDetails-Sub_Flow" targetValue="#[payload[0]]" target="fetchedPerformanceDetails"/>
		<choice doc:name="check if registerationId has already alloted college or not" doc:id="15963609-48f8-4ffc-bc95-a4fe14784c61" >
			<when expression='#[upper(vars.fetchedPerformanceDetails.studentDetails.collegeAllotment.status) == "PENDING"]'>
				<flow-ref doc:name="getPerformanceDetails-sys-e-counselling-Sub_Flow-Invoke" doc:id="0a88b2f2-8ec9-4c11-9e70-61dc53e4346f" name="getPerformanceDetails-sys-e-counselling-Sub_Flow"/>
			</when>
			<when expression='#[upper(vars.fetchedPerformanceDetails.studentDetails.collegeAllotment.status) == "ALLOTED"]'>
				<ee:transform doc:name="Response" doc:id="8ed0dbb5-8186-4166-b926-428e3c80ecb3" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.fetchedPerformanceDetails.studentDetails.collegeAllotment]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise>
				<ee:transform doc:name="Response showing seat has been confirmed" doc:id="6fd415a6-ee7d-46c3-a2ba-5408d1a8fba0" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"msg" : "welcome onboard! your seat has been confirmed in the alloted college. Thank you!"
}
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="getPerformanceDetails-sys-e-counselling-Sub_Flow" doc:id="17fd5634-21fd-4638-b40b-c7a6b6ccc9e1" >
		<flow-ref doc:name="Fetch-collegeCutoffs-allPreference-SubFlow-Invoke" doc:id="0d00536b-aefb-4ab2-89ba-d83c06a9aa30" name="Fetch-collegeCutoffs-allPreference-SubFlow" />
		<choice doc:name="fetch collegeSeats on collegeCutoff" doc:id="b3e58233-9d40-40a7-8e20-d768ecb14f79" >
			<when expression="#[((vars.collegeCutoffsPayload.collegeCutoffs.preference1.boardPercentage as Number) &lt; (vars.fetchedPerformanceDetails.studentDetails.performanceDetails.boardPercentage as Number)) and (((vars.collegeCutoffsPayload.collegeCutoffs.preference1.generalRank as Number) &gt; (vars.fetchedPerformanceDetails.studentDetails.performanceDetails.generalRank as Number)) or ((vars.collegeCutoffsPayload.collegeCutoffs.preference1.categoryRank as Number) &gt; (vars.fetchedPerformanceDetails.studentDetails.performanceDetails.categoryRank as Number)))]">
				<flow-ref doc:name="FetchcollegeSeatForPreference1-Sub_Flow-Invoke" doc:id="530e708a-32bd-4349-b1c9-cccd81cf9a73" name="FetchcollegeSeatForPreference1-Sub_Flow" />
			</when>
			<when expression="#[((vars.collegeCutoffsPayload.collegeCutoffs.preference2.boardPercentage as Number) &lt; (vars.fetchedPerformanceDetails.studentDetails.performanceDetails.boardPercentage as Number)) and (((vars.collegeCutoffsPayload.collegeCutoffs.preference2.generalRank as Number) &gt; (vars.fetchedPerformanceDetails.studentDetails.performanceDetails.generalRank as Number)) or ((vars.collegeCutoffsPayload.collegeCutoffs.preference2.categoryRank as Number) &gt; (vars.fetchedPerformanceDetails.studentDetails.performanceDetails.categoryRank as Number)))]">
				<flow-ref doc:name="FetchcollegeSeatForPreference2-Sub_Flow-Invoke" doc:id="bcfcf63a-c398-457c-ac78-b97beb9923e5" name="FetchcollegeSeatForPreference2-Sub_Flow" />
			</when>
			<when expression="#[((vars.collegeCutoffsPayload.collegeCutoffs.preference3.boardPercentage as Number) &lt; (vars.fetchedPerformanceDetails.studentDetails.performanceDetails.boardPercentage as Number)) and (((vars.collegeCutoffsPayload.collegeCutoffs.preference3.generalRank as Number) &gt; (vars.fetchedPerformanceDetails.studentDetails.performanceDetails.generalRank as Number)) or ((vars.collegeCutoffsPayload.collegeCutoffs.preference3.categoryRank as Number) &gt; (vars.fetchedPerformanceDetails.studentDetails.performanceDetails.categoryRank as Number)))]">
				<flow-ref doc:name="FetchcollegeSeatForPreference3-Sub_Flow-Invoke" doc:id="4557e503-6724-41d0-80c3-523fd5978428" name="FetchcollegeSeatForPreference3-Sub_Flow" />
			</when>
			<otherwise >
				<ee:transform doc:name="cutoff criteria not fullfilled Response" doc:id="15e03385-0486-4d8d-8d8c-730b6e8ad64b" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"msg":"student does not fullfill the cutoff criteria of the preferred colleges"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="FetchcollegeSeatForPreference3-Sub_Flow" doc:id="e33ca57e-0611-48ce-bf2e-cbe035a2d31f" >
		<set-variable value="#[output application/json&#10;---&#10;{&#10;	collegeName: vars.collegeCutoffsPayload.collegeCutoffs.preference3.collegeName,&#10;	collegeId: vars.collegeCutoffsPayload.collegeCutoffs.preference3.collegeId,&#10;	branch: vars.collegeCutoffsPayload.collegeCutoffs.preference3.branch,&#10;	category: vars.fetchedPerformanceDetails.studentDetails.personalDetails.category&#10;}]" doc:name="payload to Invoke getCollegeSeat-put for preference 3" doc:id="8c0048ea-3bbc-44f2-9a0a-58370d109082" variableName="collegeDetailPayload" />
		<flow-ref doc:name="getCollegeSeat-post-Sub_Flow" doc:id="316e2c3b-f109-42f7-948a-ee6b35c87d00" name="getCollegeSeat-post-Sub_Flow" />
		<set-variable value="#[payload[0]]" doc:name="collegeSeatData" doc:id="167aaae7-16af-4bc7-8cbc-30ae45aba47b" variableName="collegeSeatData" />
		<flow-ref doc:name="choice-seatAllotment-Sub_Flow" doc:id="d78d8498-d188-402b-8553-07d609838516" name="choice-seatAllotment-Sub_Flow" />
	</sub-flow>
	<sub-flow name="FetchcollegeSeatForPreference2-Sub_Flow" doc:id="785a8156-f7fd-41b0-b5fa-57f53885187c" >
		<set-variable value="#[output application/json&#10;---&#10;{&#10;	collegeName: vars.collegeCutoffsPayload.collegeCutoffs.preference2.collegeName,&#10;	collegeId: vars.collegeCutoffsPayload.collegeCutoffs.preference2.collegeId,&#10;	branch: vars.collegeCutoffsPayload.collegeCutoffs.preference2.branch,&#10;	category: vars.fetchedPerformanceDetails.studentDetails.personalDetails.category&#10;}]" doc:name="payload to Invoke getCollegeSeat-put for preference 2" doc:id="387e5d10-bf01-4a55-9708-f248865d42e5" variableName="collegeDetailPayload" />
		<flow-ref doc:name="getCollegeSeat-post-Sub_Flow" doc:id="0bc3ace7-45e9-48bf-8d38-58ecd47258c3" name="getCollegeSeat-post-Sub_Flow" />
		<set-variable value="#[payload[0]]" doc:name="collegeSeatData" doc:id="99d3de81-d156-460e-815a-4cb660016411" variableName="collegeSeatData" />
		<flow-ref doc:name="choice-seatAllotment-Sub_Flow" doc:id="6f2c5c97-85a3-4612-b0e4-65df61f9e063" name="choice-seatAllotment-Sub_Flow" />
	</sub-flow>
	<sub-flow name="FetchcollegeSeatForPreference1-Sub_Flow" doc:id="6f17b29d-3d76-40ef-bb96-0e4a27ce3178" >
		<set-variable value="#[output application/json&#10;---&#10;{&#10;	collegeName: vars.collegeCutoffsPayload.collegeCutoffs.preference1.collegeName,&#10;	collegeId: vars.collegeCutoffsPayload.collegeCutoffs.preference1.collegeId,&#10;	branch: vars.collegeCutoffsPayload.collegeCutoffs.preference1.branch,&#10;	category: vars.fetchedPerformanceDetails.studentDetails.personalDetails.category&#10;}]" doc:name="payload to Invoke getCollegeSeat-put for preference 1" doc:id="07481f46-ef58-49ca-ba26-997f6a40e142" variableName="collegeDetailPayload" />
		<flow-ref doc:name="getCollegeSeat-post-Sub_Flow" doc:id="5bd9635d-98b4-414b-a65f-1154cbae2195" name="getCollegeSeat-post-Sub_Flow" />
		<set-variable value="#[payload[0]]" doc:name="collegeSeatData" doc:id="b68c444c-bb0e-4c35-8709-72e3e5b18444" variableName="collegeSeatData" />
		<flow-ref doc:name="choice-seatAllotment-Sub_Flow" doc:id="66ae0736-863b-453d-bd67-4cc3e5b62602" name="choice-seatAllotment-Sub_Flow" />
	</sub-flow>
	<sub-flow name="choice-seatAllotment-Sub_Flow" doc:id="c77e1796-53d5-488c-8212-c1fd15cfc2b9" >
		<choice doc:name="Choice-Seat Allotment" doc:id="375db0c1-3b4c-45fc-a8ac-5674079f799c">
					<when expression='#[upper(vars.fetchedPerformanceDetails.studentDetails.personalDetails.category default "GENERAL") != "GENERAL"]'>
						<choice doc:name="Choice To check category Seat and General Seats availability" doc:id="71451622-c7ba-4aaf-95f0-ec0ab3251c11">
							<when expression="#[(vars.collegeSeatData.categorySeats default 0)&gt; 0]">
						<set-variable value="#[vars.fetchedPerformanceDetails.studentDetails.personalDetails.category]" doc:name="seatAllotedCategory" doc:id="d5a96d32-ca56-41ea-91ef-1d83a7c8f91f" variableName="seatAllotedCategory"/>
						<set-variable value="#[now() as Number]" doc:name="allotmentId generator" doc:id="afc0de57-b735-4697-9e5e-2238122021e2" variableName="allotmentId"/>
						<async doc:name="Async" doc:id="af9fbce1-4271-48fa-97ec-c4a27abb4e68" >
							<flow-ref doc:name="updateCollegeSeat-Sub_Flow" doc:id="a5ff0c4c-d569-4ed1-8c1a-cc19ca587449" name="updateCollegeSeat-Sub_Flow" />
						</async>
						<async doc:name="Async" doc:id="fdbff201-b558-4b06-b87d-1ce585ec6925">
							<flow-ref doc:name="updateStudentDetails-Sub_Flow-Invoke" doc:id="cc352d1b-2d60-4dcd-aee7-4c8b85023a5c" name="updateStudentDetails-Sub_Flow" />
						</async>
						<async doc:name="Async" doc:id="6658c409-6486-48f8-9ee3-2bb262765299" >
							<flow-ref doc:name="confirmationMailSending-Sub_Flow-Invoke" doc:id="ece286b6-124b-4a4f-b951-26bb12ac9c60" name="confirmationMailSending-Sub_Flow" />
						</async>
						<ee:transform doc:name="success Response" doc:id="e8870026-ca25-4fa4-90bf-0378f00b6faf">
									<ee:message>
								<ee:set-payload resource="dwls/success-Response.dwl" />
									
</ee:message>
								</ee:transform>
							
</when>
							<when expression="#[(vars.collegeSeatData.generalSeats default 0) &gt; 0]">
						<set-variable value="General" doc:name="seatAllotedCategory" doc:id="52f9b47b-f4ed-4add-b6fe-5280ddb30ac8" variableName="seatAllotedCategory" />
						<set-variable value="#[now() as Number]" doc:name="allotmentId generator" doc:id="0e0def0a-1b50-4ca9-b5b6-2d0904609a50" variableName="allotmentId" />
						<async doc:name="Async" doc:id="d05f12c4-4027-4c1b-bc25-aad41e3176be" >
							<flow-ref doc:name="updateCollegeSeat-Sub_Flow" doc:id="8ec16c02-170e-4378-8d51-6a3887c9cf25" name="updateCollegeSeat-Sub_Flow" />
						</async>
						<async doc:name="Async1" doc:id="6ef19732-15f7-46ff-8a97-ea411ac22b96">
							<flow-ref doc:name="updateStudentDetails-Sub_Flow-Invoke" doc:id="dc341733-62b5-4ea1-a2d8-ce0306903325" name="updateStudentDetails-Sub_Flow" />
						</async>
						<async doc:name="Async" doc:id="b783d4d0-066f-4f9b-91d4-037c3d7ea0cd">
							<flow-ref doc:name="confirmationMailSending-Sub_Flow-Invoke" doc:id="0883ef6f-386c-427b-ab8b-4c5bdcdb3ae4" name="confirmationMailSending-Sub_Flow" />
						</async>
						<ee:transform doc:name="success Response" doc:id="fbb6f713-fe1f-4d0d-929c-32025e70f3e1" >
							<ee:message >
								<ee:set-payload resource="dwls/success-Response.dwl" />
							</ee:message>
						</ee:transform>
							
</when>
							<otherwise>
						<choice doc:name="Routing to 2nd and 3rd Preference if No seat is available in 1st preference or vice-versa" doc:id="8bac16d8-ad3d-490d-8db4-c723e6ab3687" >
							<when expression="#[((vars.collegeSeatData.collegeId as String == vars.initialPayload.studentPreference.collegeId[0] as String) and ((vars.collegeCutoffsPayload.collegeCutoffs.preference2.boardPercentage as Number &lt; vars.fetchedPerformanceDetails.studentDetails.performanceDetails.boardPercentage as Number) and ((vars.collegeCutoffsPayload.collegeCutoffs.preference2.generalRank as Number &gt; vars.fetchedPerformanceDetails.studentDetails.performanceDetails.generalRank as Number) or vars.collegeCutoffsPayload.collegeCutoffs.preference2.categoryRank as Number &gt; vars.fetchedPerformanceDetails.studentDetails.performanceDetails.categoryRank as Number)))]">
								<flow-ref doc:name="FetchcollegeSeatForPreference2-Sub_Flow-Invoke" doc:id="dbd58fbd-30b8-4280-b9c2-13b8c4a421fe" name="FetchcollegeSeatForPreference2-Sub_Flow"/>
							</when>
							<when expression="#[(((vars.collegeSeatData.collegeId as String == vars.initialPayload.studentPreference.collegeId[0] as String) or (vars.collegeSeatData.collegeId as String == vars.initialPayload.studentPreference.collegeId[1] as String)) and ((vars.collegeCutoffsPayload.collegeCutoffs.preference3.boardPercentage as Number &lt; vars.fetchedPerformanceDetails.studentDetails.performanceDetails.boardPercentage as Number) and ((vars.collegeCutoffsPayload.collegeCutoffs.preference3.generalRank as Number &gt; vars.fetchedPerformanceDetails.studentDetails.performanceDetails.generalRank as Number) or vars.collegeCutoffsPayload.collegeCutoffs.preference3.categoryRank as Number &gt; vars.fetchedPerformanceDetails.studentDetails.performanceDetails.categoryRank as Number)))]">
								<flow-ref doc:name="FetchcollegeSeatForPreference3-Sub_Flow-Invoke" doc:id="a2943ee0-cf40-4a14-9bef-b498e5d29eb7" name="FetchcollegeSeatForPreference3-Sub_Flow"/>
							</when>
							<otherwise >
								<ee:transform doc:name="No Seat messageResponse" doc:id="0477e5a0-2830-4019-bc4a-512aab20bcbb">
									<ee:message>
										<ee:set-payload resource="dwls/no-seat-Response.dwl" />
									
</ee:message>
								</ee:transform>
							</otherwise>
						</choice>
							
</otherwise>
						</choice>
					</when>
					<otherwise>
						<choice doc:name="General category Seat Allocation" doc:id="c5233b8a-4351-4342-8246-b8815db5bd18">
							<when expression="#[(vars.collegeSeatData.generalSeats default 0) &gt; 0]">
								<set-variable value="General" doc:name="seatAllotedCategory" doc:id="36ca555f-6c39-458f-9d58-5a3f626c7f79" variableName="seatAllotedCategory" />
						<set-variable value="#[now() as Number]" doc:name="allotmentId generator" doc:id="cab7625e-d43f-4cdd-9752-913e3d832c51" variableName="allotmentId" />
						<async doc:name="Async" doc:id="563d3c5b-bd9b-4179-96cf-978204235b11" >
							<flow-ref doc:name="updateCollegeSeat-Sub_Flow" doc:id="067404ff-5ce6-4ad0-8b4f-f46724a20a4a" name="updateCollegeSeat-Sub_Flow" />
						</async>
						<async doc:name="Async1" doc:id="a5e36185-b907-4db6-a92c-b315afb897c3">
							<flow-ref doc:name="updateStudentDetails-Sub_Flow-Invoke" doc:id="e876cd94-eba0-4945-8dc3-b23991e3032d" name="updateStudentDetails-Sub_Flow" />
						</async>
						<async doc:name="Async" doc:id="627883fb-ee02-4790-ac86-a65e10538f6c">
							<flow-ref doc:name="confirmationMailSending-Sub_Flow-Invoke" doc:id="98edb0c4-13c9-47bb-a90d-799903645a6a" name="confirmationMailSending-Sub_Flow" />
						</async>
						<ee:transform doc:name="success Response" doc:id="f99e1b96-712f-49e6-8cf1-3d9e51a04b10">
									<ee:message>
								<ee:set-payload resource="dwls/success-Response.dwl" />
									
</ee:message>
								</ee:transform>
							
</when>
					<otherwise>
						<choice doc:name="Routing to 2nd and 3rd Preference if No seat is available in 1st preference" doc:id="5f748351-4980-47db-b0f1-72e1a6f6f84e" >
							<when expression="#[((vars.collegeSeatData.collegeId as String == vars.initialPayload.studentPreference.collegeId[0] as String) and ((vars.collegeCutoffsPayload.collegeCutoffs.preference2.boardPercentage as Number &lt; vars.fetchedPerformanceDetails.studentDetails.performanceDetails.boardPercentage as Number) and ((vars.collegeCutoffsPayload.collegeCutoffs.preference2.generalRank as Number &gt; vars.fetchedPerformanceDetails.studentDetails.performanceDetails.generalRank as Number) or vars.collegeCutoffsPayload.collegeCutoffs.preference2.categoryRank as Number &gt; vars.fetchedPerformanceDetails.studentDetails.performanceDetails.categoryRank as Number)))]" >
								<flow-ref doc:name="FetchcollegeCutoffForPreference2-Sub_Flow-Invoke" doc:id="677071d1-2020-49d2-af26-6925502e2eba" name="FetchcollegeSeatForPreference2-Sub_Flow" />
							</when>
							<when expression="#[(((vars.collegeSeatData.collegeId as String == vars.initialPayload.studentPreference.collegeId[0] as String) or (vars.collegeSeatData.collegeId as String == vars.initialPayload.studentPreference.collegeId[1] as String)) and ((vars.collegeCutoffsPayload.collegeCutoffs.preference3.boardPercentage as Number &lt; vars.fetchedPerformanceDetails.studentDetails.performanceDetails.boardPercentage as Number) and ((vars.collegeCutoffsPayload.collegeCutoffs.preference3.generalRank as Number &gt; vars.fetchedPerformanceDetails.studentDetails.performanceDetails.generalRank as Number) or vars.collegeCutoffsPayload.collegeCutoffs.preference3.categoryRank as Number &gt; vars.fetchedPerformanceDetails.studentDetails.performanceDetails.categoryRank as Number)))]" >
								<flow-ref doc:name="FetchcollegeCutoffForPreference3-Sub_Flow" doc:id="b4968b9d-53bd-44c1-88c2-7405726353d6" name="FetchcollegeSeatForPreference3-Sub_Flow" />
							</when>
							<otherwise >
								<ee:transform doc:name="No Seat messageResponse" doc:id="a47cce8e-a25f-457e-a9cb-462dc8090dea" >
									<ee:message >
										<ee:set-payload resource="dwls/no-seat-Response.dwl" />
									</ee:message>
								</ee:transform>
							</otherwise>
						</choice>

							</otherwise>
						
</choice>
					</otherwise>
				</choice>
	</sub-flow>
		<sub-flow name="Fetch-collegeCutoffs-allPreference-SubFlow" doc:id="86ebc7a0-e313-480c-b771-9749f27e8450" >
		<ee:transform doc:name="Payload before Invoking collegeCutoff" doc:id="00b24d5d-2aa8-447c-9eda-7a91321deb92" >
			<ee:message >
				<ee:set-payload resource="dwls/collegeCutoffs-Request-payload.dwl" />
			</ee:message>
		</ee:transform>
		<flow-ref doc:name="getCollegeCutoff-Sub_Flow-Invoke" doc:id="0279ddce-d730-4e53-8b59-d712d018e56a" name="getCollegeCutoff-Sub_Flow"/>
		<ee:transform doc:name="target-collegeCutoffs-payload" doc:id="c5998d7f-8e2d-4d4e-9426-bf3d0f09f3ea">
			<ee:message>
			
</ee:message>
			<ee:variables >
				<ee:set-variable resource="dwls/collegeCutoffs-Response-payload.dwl" variableName="collegeCutoffsPayload" />
			</ee:variables>
		
</ee:transform>
	
</sub-flow>
	<sub-flow name="getCollegeCutoff-Sub_Flow" doc:id="71f4860c-7e1e-4481-9f96-585a97e57bc0" >
		<logger level="INFO" doc:name="Logging before getCollegeCutoff-Invoke" doc:id="c4ddca18-6267-4b1f-8a77-a06d662ce6ac" message="#[payload]" />
		<http:request method="POST" doc:name="Request-sys-e-counselling-getCollegeCutoff-Invoke" doc:id="b7b4df24-e6ea-45b5-b8e9-d454eb0d5904" path="/getCollegeCutoff" config-ref="HTTPRequest-sys-e-counselling">
				<reconnect frequency="3000" count="3" />
			<http:headers><![CDATA[#[output application/java
---
{
	"client_secret" : "${secure::HTTPRequestor.client_secret}",
	"client_id" : "${secure::HTTPRequestor.client_id}"
}]]]></http:headers>
		</http:request>
		<logger level="INFO" doc:name="Logging after getCollegeCutoff-Invoke" doc:id="89c4f6d1-ed42-4a8e-9653-9d82c457e405" message="#[payload]" />
		<choice doc:name="check if payload has size zero because of wrong collegeId" doc:id="069646b5-c274-4be7-87f4-9efa4bbe6d2f" >
			<when expression="#[sizeOf(payload) &lt; 3]" >
				<raise-error doc:name="collegeId doesn't exist" doc:id="3fcc4ce4-b9d2-4f71-a121-5e3f88103eb7" type="APP:CUSTOM_ERROR" description="One or more collegeId doen't exist , Please check the collegeId in your preference and try again." />
			</when>
			<otherwise>
				<logger level="INFO" doc:name="valid collegeId" doc:id="3819f071-ecba-4d2f-b81c-927d9ce9df82" message="valid collegeId"/>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="getCollegeSeat-post-Sub_Flow" doc:id="10a4d013-13c3-494a-a9cc-1f6bb2d09919" >
		<logger level="INFO" doc:name="Logging before getCollegeSeat-post-Invoke" doc:id="f462ef92-525b-4070-b863-a3316fabcb07" message="#[payload]" />
		<http:request method="POST" doc:name="Request-sys-e-counselling-getCollegeSeat-post-Invoke" doc:id="7ff47554-139f-428a-ac57-6ba3d3e6b450" path="/getCollegeSeat" config-ref="HTTPRequest-sys-e-counselling">
				<reconnect frequency="3000" count="3" />
			<http:body ><![CDATA[#[vars.collegeDetailPayload]]]></http:body>
			<http:headers><![CDATA[#[output application/java
---
{
	"client_secret" : "${secure::HTTPRequestor.client_secret}",
	"client_id" : "${secure::HTTPRequestor.client_id}"
}]]]></http:headers>
		</http:request>
		<logger level="INFO" doc:name="Logging before getCollegeSeat-post-Invoke" doc:id="decd1578-15ef-4f95-86e9-ec279a8bbc37" message="#[payload]" />
	</sub-flow>
	<sub-flow name="updateCollegeSeat-Sub_Flow" doc:id="ef865baf-468a-468b-8591-ff330a4be5f1" >
		<logger level="INFO" doc:name="Logging before getCollegeSeat-put-Invoke" doc:id="bf1ce285-f31e-4d1c-98ae-467e8ae066d2" message="#[payload]" />
		<http:request method="PUT" doc:name="Request-sys-e-counselling-getCollegeSeat-put-Invoke" doc:id="a10c059e-3ed1-4853-86b9-5beb6e9507b2" config-ref="HTTPRequest-sys-e-counselling" path="/getCollegeSeat">
			<reconnect frequency="3000" count="3" />
			<http:body ><![CDATA[#[vars.collegeDetailPayload]]]></http:body>
			<http:headers><![CDATA[#[output application/java
---
{
	"client_secret" : "${secure::HTTPRequestor.client_secret}",
	"client_id" : "${secure::HTTPRequestor.client_id}"
}]]]></http:headers>
		</http:request>
		<logger level="INFO" doc:name="Logging after getCollegeSeat-put-Invoke" doc:id="69775ee2-e2be-4a02-a7ae-44c0835e526e" message="#[payload]" />
	</sub-flow>
	<sub-flow name="getPerformanceDetails-Sub_Flow" doc:id="cacc8cc6-e794-489f-90e4-6ac7495a28f4" >
		<logger level="INFO" doc:name="Logging before getPerformanceDetails-Invoke" doc:id="a7180858-6bf1-443d-9a5a-c836697c0294" message="#[payload]"/>
		<http:request method="POST" doc:name="Request-sys-e-counselling-getPerformanceDetails-post-Invoke" doc:id="7acdc9e3-e666-43d5-85c8-0b8c95eb2b4d" config-ref="HTTPRequest-sys-e-counselling" path="/getPerformanceDetails">
			<http:headers ><![CDATA[#[output application/java
---
{
	"client_secret" : "${secure::HTTPRequestor.client_secret}",
	"client_id" : "${secure::HTTPRequestor.client_id}"
}]]]></http:headers>
		
</http:request>
		<logger level="INFO" doc:name="Logging after getPerformanceDetails-Invoke" doc:id="08c723e3-2b52-40c2-a28f-80d73f751506" message="#[payload]"/>
		<choice doc:name="check if student with given registerationId is present or not" doc:id="39b23b41-98c2-4fd2-8bca-daa92e1dfcb3" >
			<when expression="#[sizeOf(payload) == 0]">
				<raise-error doc:name=" 'registerationId' is not valid" doc:id="bcfd420a-744f-4159-91b2-36ebd598bd6b" type="APP:CUSTOM_ERROR" description="The 'registerationId' is not valid , please check the RegisterationId and try again"/>
			</when>
			<otherwise>
				<logger level="INFO" doc:name="valid RegisterationId" doc:id="2436e0b3-9c8d-4281-9ecf-affbaa6b73c8" message="valid RegisterationId"/>
			</otherwise>
		</choice>
	
</sub-flow>
	<sub-flow name="updateStudentDetails-Sub_Flow" doc:id="367834f8-e4e8-426b-94d7-9c7ac8236bf2" >
		<ee:transform doc:name="payload to Invoke sys-e-counselling_getPerformanceDetails-put" doc:id="6e5855e5-085a-4d86-a4be-f89d8ae5b8ec" >
			<ee:message >
				<ee:set-payload resource="dwls/updateStudentDetails_payload.dwl" />
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logging before getPerformanceDetails-put-Invoke" doc:id="2fc374bc-60ed-43e3-b8f6-4c6c73980ae1" message="#[payload]"/>
		<http:request method="PUT" doc:name="Request-sys-e-counselling-getPerformanceDetails-put-Invoke" doc:id="16db1699-24ad-4c0c-a12d-fb02f49c4e9f" config-ref="HTTPRequest-sys-e-counselling" path="/getPerformanceDetails">
			<http:headers><![CDATA[#[output application/java
---
{
	"client_secret" : "${secure::HTTPRequestor.client_secret}",
	"client_id" : "${secure::HTTPRequestor.client_id}"
}]]]></http:headers>
		</http:request>
		<logger level="INFO" doc:name="Logging after getPerformanceDetails-put-Invoke" doc:id="98dd104a-2aba-42bc-821e-ac1304c9f54f" message="#[payload]" />
	</sub-flow>
	<sub-flow name="confirmationMailSending-Sub_Flow" doc:id="6ce3c3f3-129b-4bed-abfe-7e2ccf64f3fb" >
		<set-variable value="#[%dw 2.0&#10;output application/xml&#10;---&#10;{&#10;  &quot;html&quot;: {&#10;    &quot;head&quot;: {&#10;      &quot;title&quot;: &quot;e-counselling&quot;,&#10;      &quot;meta&quot; @(&quot;content&quot;: &quot;text/html; charset: utf-8&quot;, &quot;http-equiv&quot;: &quot;Content-Type&quot;): &quot;&quot;,&#10;      &quot;style&quot;: &quot;table, th, td {&#10;            border: 1px solid black;&#10;            border-collapse: collapse;&#10;            }&quot;&#10;    },&#10;    &quot;body&quot;: {&#10;      &quot;h1&quot;: &quot;Confirmation mail E-Counselling&quot;,&#10;      &quot;p&quot;: &quot;Based on your preferences you have been alloted the below college.&quot;,&#10;      &quot;table&quot;:{&#10;          &quot;tr&quot;:{&#10;              &quot;th&quot;:&quot;college Name&quot;,&#10;              &quot;th&quot;:&quot;Branch&quot;&#10;          },&#10;          &quot;tr&quot;:{&#10;              &quot;td&quot;:vars.collegeDetailPayload.collegeName,&#10;              &quot;td&quot;:vars.collegeDetailPayload.branch&#10;          }&#10;      },&#10;      &quot;p&quot;: &quot;your preferences:&quot;,&#10;      &quot;table&quot;:{&#10;          &quot;tr&quot;:{&#10;              &quot;th&quot;:&quot;Preference&quot;,&#10;              &quot;th&quot;:&quot;college Name&quot;,&#10;              &quot;th&quot;:&quot;Branch&quot;&#10;          },&#10;          &quot;tr&quot;:{&#10;              &quot;td&quot;: &quot;1&quot;,&#10;              &quot;td&quot;:vars.initialPayload.studentPreference.preferredCollege[0],&#10;              &quot;td&quot;:vars.initialPayload.studentPreference.branch[0]&#10;          },&#10;           &quot;tr&quot;:{&#10;              &quot;td&quot;: &quot;2&quot;,&#10;              &quot;td&quot;:vars.initialPayload.studentPreference.preferredCollege[1],&#10;              &quot;td&quot;:vars.initialPayload.studentPreference.branch[1]&#10;          },&#10;           &quot;tr&quot;:{&#10;              &quot;td&quot;: &quot;3&quot;,&#10;              &quot;td&quot;:vars.initialPayload.studentPreference.preferredCollege[2],&#10;              &quot;td&quot;:vars.initialPayload.studentPreference.branch[2]&#10;          }&#10;      },&#10;      &quot;footer&quot;:{&#10;          &quot;p&quot;:&quot;For any query&quot;,&#10;          &quot;p&quot;:&quot;contact&quot; : p('company.email'),&#10;          &quot;p&quot;:&quot;Thanks and Regards&quot;&#10;      }&#10;    }&#10;  }&#10;}]" doc:name="emailBody" doc:id="60838f4b-8e94-4d91-9249-fe13fa5ef07b" variableName="emailBody"/>
		<set-variable value="#[output application/json&#10;---&#10;{&#10;	subject: &quot;Regarding college allotment e-counselling&quot;,&#10;	senderMailId: p('company.email'),&#10;	receiverMailId: vars.fetchedPerformanceDetails.studentDetails.personalDetails.email&#10;}]" doc:name="emailContent" doc:id="6d5139f5-83fc-405c-b542-524835d66152" variableName="emailContent"/>
		<email:send doc:id="9e8e21d0-7f2f-4d91-8527-53496148cc74" config-ref="Email_SMTP" fromAddress="#[vars.emailContent.senderMailId]" subject="#[vars.emailContent.subject]" doc:name="confirmation-mail sending">
			<email:to-addresses>
				<email:to-address value="#[vars.emailContent.receiverMailId]"/>
			</email:to-addresses>
			<email:body contentType="text/html" encoding="UTF-8">
				<email:content><![CDATA[#[vars.emailBody]]]></email:content>
			</email:body>
		</email:send>
	</sub-flow>
	<sub-flow name="getCollegeList-Sub_Flow" doc:id="c8001efe-79e2-401d-b09b-68ce3a3558c1" >
		<logger level="INFO" doc:name="Log before getCollegeList-get Invoke" doc:id="f0b65381-a59f-40ee-8531-5bc6d2554e25" message="#[payload]"/>
		<http:request method="GET" doc:name="Request-sys-e-counselling-getCollegeList-get-Invoke" doc:id="108f5a19-91ac-402a-993d-d61813c2a061" config-ref="HTTPRequest-sys-e-counselling" path="/getCollegeList" >
			<http:headers ><![CDATA[#[output application/java
---
{
	"client_secret" : "${secure::HTTPRequestor.client_secret}",
	"client_id" : "${secure::HTTPRequestor.client_id}"
}]]]></http:headers>
		</http:request>
		<logger level="INFO" doc:name="Log after getCollegeList-get Invoke" doc:id="5aa7bd55-0548-4fbe-90f0-efb9c91646c8" message="#[payload]"/>
	</sub-flow>
</mule>
